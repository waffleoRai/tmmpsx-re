gGlobalBss = 0x80010000; // type:u32 size:0x4
rdFileNameVoice = 0x80010004; // type:char size:0xc
rdFileNameSe = 0x80010010; // type:char size:0xa
rdFileNameBgm = 0x8001001c; // type:char size:0xb
rdFileNameMovie = 0x80010028; // type:char size:0xb
rdFileNameField = 0x80010034; // type:char size:0xd
rdFileNameFace = 0x80010044; // type:char size:0xc
rdFileNameEffect = 0x80010050; // type:char size:0xe
rdFileNameAnime = 0x80010060; // type:char size:0xd
rdFileNameSce = 0x80010070; // type:char size:0xb
rdFileNameSystem = 0x8001007c; // type:char size:0xe
rdFileNameScreen = 0x8001008c; // type:char size:0xe
rdFileNameUnit = 0x8001009c; // type:char size:0xc
rdMCSaveTitleGame = 0x80012260; // type:u16 size:0x22
rdMCSaveTitleSys = 0x80012284; // type:u16 size:0x22
rs_mcsave_1e770 = 0x8001e770; // type:char* size:0x4
rdMCSaveFileName = 0x80035714; // type:char size:0x14
rs_ccc_00 = 0x80038a50; // type:u32 size:0x20
rd_libcd_bios_str390fc = 0x800390fc; // type:char size:0x9
rd_libcd_bios_str39108 = 0x80039108; // type:char size:0x9
rd_libcd_bios_str39114 = 0x80039114; // type:char size:0x9
rd_libcd_bios_str39120 = 0x80039120; // type:char size:0x9
rd_libcd_bios_str3912c = 0x8003912c; // type:char size:0x9
rd_libcd_bios_str39138 = 0x80039138; // type:char size:0xb
rd_libcd_bios_str39144 = 0x80039144; // type:char size:0xb
rd_libcd_bios_str39150 = 0x80039150; // type:char size:0x2
rd_libcd_bios_str39154 = 0x80039154; // type:char size:0xb
rd_libcd_bios_str39160 = 0x80039160; // type:char size:0xd
rd_libcd_bios_str39170 = 0x80039170; // type:char size:0xa
rd_libcd_bios_str3917c = 0x8003917c; // type:char size:0x8
rd_libcd_bios_str39184 = 0x80039184; // type:char size:0x9
rd_libcd_bios_str39190 = 0x80039190; // type:char size:0x9
rd_libcd_bios_str3919c = 0x8003919c; // type:char size:0x8
rd_libcd_bios_str391a4 = 0x800391a4; // type:char size:0xb
rd_libcd_bios_str391b0 = 0x800391b0; // type:char size:0x9
rd_libcd_bios_str391bc = 0x800391bc; // type:char size:0xc
rd_libcd_bios_str391c8 = 0x800391c8; // type:char size:0xb
rd_libcd_bios_str391d4 = 0x800391d4; // type:char size:0x8
rd_libcd_bios_str391dc = 0x800391dc; // type:char size:0xa
rd_libcd_bios_str391e8 = 0x800391e8; // type:char size:0x7
rd_libcd_bios_str391f0 = 0x800391f0; // type:char size:0x8
rd_libcd_bios_str391f8 = 0x800391f8; // type:char size:0xa
rd_libcd_bios_str39204 = 0x80039204; // type:char size:0x8
rd_libcd_bios_str3920c = 0x8003920c; // type:char size:0xc
rd_libcd_bios_str39218 = 0x80039218; // type:char size:0x9
rd_libcd_bios_str39224 = 0x80039224; // type:char size:0xa
rd_libcd_bios_str39230 = 0x80039230; // type:char size:0x7
rd_libcd_bios_str392a0 = 0x800392a0; // type:char size:0x6
rd_libcd_bios_str392a8 = 0x800392a8; // type:char size:0x1
rd_libcd_bios_str392ec = 0x800392ec; // type:char size:0x6
rd_libcd_bios_str392f4 = 0x800392f4; // type:char size:0x38
_libcard_end_padding_a8 = 0x800c8fa8; // type:u32 size:0x4
_libcard_end_padding_b4 = 0x800c8fb4; // type:u32 size:0x4
_libc_a56_garbage = 0x800e11b8; // type:u8 size:0x8
_libapi_c73_garbage = 0x800e12f8; // type:u8 size:0x8
sStrRave = 0x800e1e84; // type:u16 size:0xa
sStrWinkySoft = 0x800e1e90; // type:char size:0x1c
gMovieInfo = 0x800e1eac; // type:u32 size:0x74
gMovieScreenParam = 0x800e1f20; // type:u16 size:0x40
_cdfile_dat_800e1f60 = 0x800e1f60; // type:u8 size:0x8
gFilePos = 0x800e1f68; // type:u32 size:0x34
sFileMemsize = 0x800e1f9c; // type:u32 size:0x34
sFileNames = 0x800e1fd0; // type:char* size:0x34
sAudioCallbacks = 0x800e2004; // type:u32 size:0x60
sGfxACallbacks = 0x800e2064; // type:u32 size:0x80
gVoiceGroupPos = 0x800e20e4; // type:u16 size:0x78
gVoiceClipInfo = 0x800e215c; // type:u8 size:0x674c
gFilePosBgm = 0x800e88a8; // type:u32 size:0x100
_resbgm_dat_800e89a8 = 0x800e89a8; // type:u8 size:0x140
gFilePosSe = 0x800e8ae8; // type:u32 size:0x140
gFilePosSystem = 0x800e8c28; // type:u32 size:0x1c0
gFileSizeSystem = 0x800e8de8; // type:u32 size:0x1c0
gFilePosFace = 0x800e8fa8; // type:u32 size:0x300
gFileSizeFace = 0x800e92a8; // type:u32 size:0x300
gFilePosScreen = 0x800e95a8; // type:u32 size:0x440
gFileSizeScreen = 0x800e99e8; // type:u32 size:0x440
gFilePosUnit = 0x800e9e28; // type:u32 size:0x800
gFileSizeUnit = 0x800ea628; // type:u32 size:0x800
gFilePosSce = 0x800eae28; // type:u32 size:0x400
gFilePosField = 0x800eb228; // type:u32 size:0x300
gFileSizeField = 0x800eb528; // type:u32 size:0x300
gFilePosAnime = 0x800eb828; // type:u32 size:0x980
gFilePosEffect = 0x800ec1a8; // type:u32 size:0x980
gFileSizeEffect = 0x800ecb28; // type:u32 size:0x980
_gfxc_dat_800ed4a8 = 0x800ed4a8; // type:u32 size:0x10
_gfxc_dat_800ed4b8 = 0x800ed4b8; // type:u32 size:0x80
sGfxCCallbacks = 0x800ed538; // type:u32 size:0x4c
_gfxb_dat_800ed584 = 0x800ed584; // type:u8 size:0x20
_gfxb_dat_800ed5a4 = 0x800ed5a4; // type:u8 size:0x10
_udat5_dat_800ed5b4 = 0x800ed5b4; // type:u8 size:0x2b4c
_udat5_dat_800f0100 = 0x800f0100; // type:u8 size:0x8f00
_udat5_dat_800f9000 = 0x800f9000; // type:u8 size:0x1754
_udat6_dat_800fa754 = 0x800fa754; // type:u8 size:0x10
_udat6_dat_800fa764 = 0x800fa764; // type:u8 size:0x10
_udat6_dat_800fa774 = 0x800fa774; // type:u8 size:0x10
_udat6_dat_800fa784 = 0x800fa784; // type:u8 size:0x10
_udat6_dat_800fa794 = 0x800fa794; // type:u8 size:0x10
_mcsave_dat_800fa7a4 = 0x800fa7a4; // type:u8 size:0x8
_mcsave_dat_800fa7ac = 0x800fa7ac; // type:u8 size:0x8
gSceCallbacks = 0x800fa7b4; // type:u32 size:0x400
_cbm_dat_800fabb4 = 0x800fabb4; // type:u8 size:0x100
gMccbCallbacksA = 0x800facb4; // type:u32 size:0x60
gMccbCallbacksB = 0x800fad14; // type:u32 size:0x40
gMccbCallbacksC = 0x800fad54; // type:u32 size:0x40
gS8CallbacksA = 0x800fad94; // type:u32 size:0xa0
gS8CallbacksB = 0x800fae34; // type:u32 size:0x40
gS8CallbacksC = 0x800fae74; // type:u32 size:0x40
_c8_dat_800faeb4 = 0x800faeb4; // type:u8 size:0x10
_c8_dat_800faec4 = 0x800faec4; // type:u8 size:0x10
_c8_dat_800faed4 = 0x800faed4; // type:u32 size:0xc
gS9CallbacksA = 0x800faee0; // type:u32 size:0x34
gS9CallbacksB = 0x800faf14; // type:u32 size:0x14
gS9CallbacksC = 0x800faf28; // type:u32 size:0x10
gS9CallbacksD = 0x800faf38; // type:u32 size:0x10
gS9CallbacksE = 0x800faf48; // type:u32 size:0x24
gS9CallbacksF = 0x800faf6c; // type:u32 size:0x2c
gS9CallbacksG = 0x800faf98; // type:u32 size:0x14
gS9CallbacksH = 0x800fafac; // type:u32 size:0x54
gS9CallbacksI = 0x800fb000; // type:u32 size:0x8
gS9CallbacksJ = 0x800fb008; // type:u32 size:0x68
gSAACallbacksA = 0x800fb070; // type:u32 size:0x180
gSAACallbacksB = 0x800fb1f0; // type:u32 size:0x20
gSAACallbacksC = 0x800fb210; // type:u32 size:0x80
gSBACallbacksA = 0x800fb290; // type:u32 size:0x40
gSBACallbacksB = 0x800fb2d0; // type:u32 size:0x74
gSBBCallbacks = 0x800fb344; // type:u32 size:0xc4
gSCACallbacksA = 0x800fb408; // type:u32 size:0x30
gSCACallbacksB = 0x800fb438; // type:u32 size:0x2c
gSCACallbacksC = 0x800fb464; // type:u32 size:0x24
gSCACallbacksD = 0x800fb488; // type:u32 size:0x24
gSCCCallbacksA = 0x800fb4ac; // type:u32 size:0x10
gSCCCallbacksB = 0x800fb4bc; // type:u32 size:0x8
_libmath_ferr_00 = 0x800fb4c4; // type:u8 size:0x8
math_errno = 0x800fb4cc; // type:u32 size:0x4
math_err_point = 0x800fb4d0; // type:u32 size:0x4
_libpad_maiini_00 = 0x800fb4d4; // type:u32 size:0x4
_libpad_dirres_00 = 0x800fb4e4; // type:u32 size:0x4
_libpad_res_00 = 0x800fb4f4; // type:u8 size:0x8
_padFuncNextPort = 0x800fb4fc; // type:u32 size:0x4
_padFuncClrInfo = 0x800fb500; // type:u32 size:0x4
_padFuncGetTxd = 0x800fb504; // type:u32 size:0x4
_padFuncCurrLimit = 0x800fb508; // type:u32 size:0x4
_padFuncPtr2Port = 0x800fb50c; // type:u32 size:0x4
_padFuncPort2Info = 0x800fb510; // type:u32 size:0x4
_padFuncSendAuto = 0x800fb514; // type:u32 size:0x4
_padFuncChkEng = 0x800fb518; // type:u32 size:0x4
_padFuncRecvAuto = 0x800fb51c; // type:u32 size:0x4
_padFuncClrCmdNo = 0x800fb520; // type:u32 size:0x4
_padFuncIntGun = 0x800fb524; // type:u32 size:0x4
_padFuncSetGunPort = 0x800fb528; // type:u32 size:0x4
_padFuncGetGunPos = 0x800fb52c; // type:u32 size:0x4
_padInfoDir = 0x800fb530; // type:u32 size:0x4
_padIntExec = 0x800fb534; // type:u32 size:0x4
_padGunExec = 0x800fb538; // type:u32 size:0x4
_padSioChan = 0x800fb53c; // type:u32 size:0x4
_padSioState = 0x800fb540; // type:u32 size:0x4
_padTotalCurr = 0x800fb544; // type:u32 size:0x4
_padModeMtap = 0x800fb548; // type:u32 size:0x4
_padChanStart = 0x800fb54c; // type:u32 size:0x4
_padChanStop = 0x800fb550; // type:u32 size:0x4
_padFixResult = 0x800fb554; // type:u8 size:0x8
_padVsyncParam = 0x800fb55c; // type:u8 size:0x10
_spu_RXX = 0x800fb5f4; // type:u32 size:0x4
_spu_tsa = 0x800fb60c; // type:u16 size:0x2
_spu_transMode = 0x800fb610; // type:u32 size:0x4
_spu_addrMode = 0x800fb614; // type:u32 size:0x4
_spu_mem_mode = 0x800fb618; // type:u32 size:0x4
_spu_mem_mode_plus = 0x800fb61c; // type:u32 size:0x4
_spu_mem_mode_unit = 0x800fb620; // type:u32 size:0x4
_spu_mem_mode_unitM = 0x800fb624; // type:u32 size:0x4
_spu_inTransfer = 0x800fb628; // type:u32 size:0x4
_spu_transferCallback = 0x800fb62c; // type:u32 size:0x4
_spu_IRQCallback = 0x800fb630; // type:u32 size:0x4
_libspu_ini_00 = 0x800fb654; // type:u8 size:0x8
_spu_EVdma = 0x800fb65c; // type:u32 size:0x4
_spu_keystat = 0x800fb660; // type:u32 size:0x4
_spu_trans_mode = 0x800fb664; // type:u32 size:0x4
_spu_rev_flag = 0x800fb668; // type:u32 size:0x4
_spu_rev_reserve_wa = 0x800fb66c; // type:u32 size:0x4
_spu_rev_offsetaddr = 0x800fb670; // type:u32 size:0x4
_spu_rev_attr = 0x800fb674; // type:u8 size:0x14
_spu_RQvoice = 0x800fb688; // type:u32 size:0x4
_spu_RQmask = 0x800fb68c; // type:u32 size:0x4
_spu_voice_centerNote = 0x800fb690; // type:u16 size:0x2c
_libspu_ini_6a = 0x800fb6be; // type:u16 size:0x2
_spu_env = 0x800fb6c0; // type:u32 size:0x4
_spu_isCalled = 0x800fb6c4; // type:u32 size:0x4
_spu_AllocBlockNum = 0x800fb6d4; // type:u32 size:0x4
_spu_AllocLastNum = 0x800fb6d8; // type:u32 size:0x4
_spu_memList = 0x800fb6dc; // type:u32 size:0x4
_spu_zerobuf = 0x800fb6e4; // type:u8 size:0x400
_spu_rev_startaddr = 0x800fbae4; // type:u32 size:0x30
_spu_rev_workareasize = 0x800fbb14; // type:u32 size:0x4
_snd_seq_tick_env = 0x800fbb44; // type:u32 size:0x4
_libsnd_start_12 = 0x800fbb56; // type:u8 size:0x1
_libspu_n2p_16 = 0x800fbb7a; // type:u16 size:0x2
_libspu_n2p_116 = 0x800fbc7a; // type:u16 size:0x2
_spu_rev_param = 0x800fbc84; // type:u8 size:0x1
Hcount = 0x800fc074; // type:u32 size:0x4
_libetc_intr_5a = 0x800fc0de; // type:u16 size:0x2
Vcount = 0x800fd1a4; // type:u32 size:0x4
CD_cbread = 0x800fd204; // type:u32 size:0x4
CD_read_dma_mode = 0x800fd208; // type:u32 size:0x4
debug_cause = 0x800fd2dc; // type:u32 size:0x4
CD_cbsync = 0x800fd2ec; // type:u32 size:0x4
CD_cbready = 0x800fd2f0; // type:u32 size:0x4
CD_debug = 0x800fd2f4; // type:u32 size:0x4
CD_status = 0x800fd2f8; // type:u8 size:0x1
CD_status1 = 0x800fd2fc; // type:u32 size:0x4
CD_nopen = 0x800fd300; // type:u32 size:0x4
CD_pos = 0x800fd304; // type:u8 size:0x1
CD_mode = 0x800fd308; // type:u8 size:0x1
CD_com = 0x800fd309; // type:u8 size:0x1
DS_active = 0x800fd30c; // type:u32 size:0x4
CD_comstr = 0x800fd310; // type:char* size:0x80
CD_intstr = 0x800fd390; // type:char* size:0x20
_libcd_bios_2e5 = 0x800fd5c9; // type:u8 size:0x1
_libcd_bios_2e6 = 0x800fd5ca; // type:u8 size:0x1
_libcd_bios_2e8 = 0x800fd5cc; // type:char* size:0x18
H_cor_tbl = 0x800fd6f4; // type:u32 size:0x20
GPU_printf = 0x800fd760; // type:u32 size:0x4
GEnv = 0x800fd764; // type:u8 size:0x1
_libgpu_sys_51 = 0x800fd765; // type:u8 size:0x1
_libgpu_sys_52 = 0x800fd766; // type:u8 size:0x1
_libgpu_sys_53 = 0x800fd767; // type:u8 size:0x1
_libgpu_sys_56 = 0x800fd76a; // type:u16 size:0x2
_libgpu_sys_126 = 0x800fd83a; // type:u16 size:0x26
_qin = 0x800fd88c; // type:u32 size:0x4
_qout = 0x800fd890; // type:u32 size:0x4
D_main_sdata_fe874 = 0x800fe874; // type:u32 size:0x8
D_main_sdata_fe87c = 0x800fe87c; // type:u32 size:0x4
D_pad_sdata_fe880 = 0x800fe880; // type:u32 size:0x8
sCdFilesEmptyString = 0x800fe888; // type:u32 size:0x4
sCdFilePrefix = 0x800fe88c; // type:u8 size:0x8
D_gfxa_sdata_fe8b9 = 0x800fe8b9; // type:u8 size:0x1
D_gfxa_sdata_fe8ba = 0x800fe8ba; // type:u8 size:0x1
D_gfxa_sdata_fe8bb = 0x800fe8bb; // type:u8 size:0x1
D_c6d_sdata_fe918 = 0x800fe918; // type:u8 size:0x8
D_c6d_sdata_fe920 = 0x800fe920; // type:u8 size:0xf
D_c6d_sdata_fe92f = 0x800fe92f; // type:u8 size:0x5
D_c6d_sdata_fe934 = 0x800fe934; // type:u8 size:0x4
D_c6d_sdata_fe938 = 0x800fe938; // type:u8 size:0x8
D_c6d_sdata_fe940 = 0x800fe940; // type:u8 size:0x8
D_heap_sdata_fe948 = 0x800fe948; // type:u8 size:0x8
D_mccb_sdata_fe950 = 0x800fe950; // type:u32 size:0x4
D_mccb_sdata_fe954 = 0x800fe954; // type:char size:0x2
D_c8_sdata_fe958 = 0x800fe958; // type:u16 size:0x6
D_c8_sdata_fe95e = 0x800fe95e; // type:u8 size:0x2
D_c8_sdata_fe960 = 0x800fe960; // type:u16 size:0x8
D_c8_sdata_fe968 = 0x800fe968; // type:u8 size:0x4
D_c8_sdata_fe96c = 0x800fe96c; // type:u8 size:0x8
D_c8_sdata_fe974 = 0x800fe974; // type:u32 size:0x8
D_c8_sdata_fe97c = 0x800fe97c; // type:u32 size:0x8
D_c8_sdata_fe984 = 0x800fe984; // type:u8 size:0x8
D_c9_sdata_fe98c = 0x800fe98c; // type:u32 size:0x8
D_c9_sdata_fe994 = 0x800fe994; // type:u8 size:0x8
D_c9_sdata_fe99c = 0x800fe99c; // type:u8 size:0x7
D_c9_sdata_fe9a3 = 0x800fe9a3; // type:u8 size:0x9
D_caa_sdata_fe9ac = 0x800fe9ac; // type:u8 size:0x1
D_caa_sdata_fe9ad = 0x800fe9ad; // type:u8 size:0x1
D_caa_sdata_fe9ae = 0x800fe9ae; // type:u16 size:0x2
D_caa_sdata_fe9b0 = 0x800fe9b0; // type:u8 size:0x7
D_caa_sdata_fe9b7 = 0x800fe9b7; // type:u8 size:0x8
D_caa_sdata_fe9bf = 0x800fe9bf; // type:u8 size:0x9
D_caa_sdata_fe9c8 = 0x800fe9c8; // type:u32 size:0x4
D_caa_sdata_fe9cc = 0x800fe9cc; // type:u8 size:0x6
D_caa_sdata_fe9d2 = 0x800fe9d2; // type:u8 size:0x2
D_cac_sdata_fe9d4 = 0x800fe9d4; // type:u8 size:0x4
D_cac_sdata_fe9d8 = 0x800fe9d8; // type:u8 size:0x4
D_cba_sdata_fe9dc = 0x800fe9dc; // type:u32 size:0x4
D_cba_sdata_fe9e0 = 0x800fe9e0; // type:u32 size:0x4
D_cba_sdata_fe9e4 = 0x800fe9e4; // type:u8 size:0x8
D_cba_sdata_fe9ec = 0x800fe9ec; // type:u32 size:0x4
D_cbb_sdata_fe9f0 = 0x800fe9f0; // type:u8 size:0x4
D_cbb_sdata_fe9f4 = 0x800fe9f4; // type:u8 size:0x4
D_cbb_sdata_fe9f8 = 0x800fe9f8; // type:u8 size:0x4
D_cbb_sdata_fe9fc = 0x800fe9fc; // type:u8 size:0x4
D_cbb_sdata_fea00 = 0x800fea00; // type:u32 size:0x4
D_cca_sdata_fea04 = 0x800fea04; // type:u32 size:0x8
D_ccc_sdata_fea0c = 0x800fea0c; // type:u8 size:0x8
D_ccc_sdata_fea14 = 0x800fea14; // type:u8 size:0x8
D_ccc_sdata_fea1c = 0x800fea1c; // type:u32 size:0x4
D_ccc_sdata_fea20 = 0x800fea20; // type:u32 size:0x4
D_ccc_sdata_fea24 = 0x800fea24; // type:u32 size:0x8
D_ccc_sdata_fea2c = 0x800fea2c; // type:u32 size:0x8
D_ccc_sdata_fea34 = 0x800fea34; // type:u8 size:0x8
D_ccc_sdata_fea3c = 0x800fea3c; // type:u8 size:0x5
D_ccc_sdata_fea41 = 0x800fea41; // type:u8 size:0x7
D_main_sbss_fea48 = 0x800fea48; // type:u8 size:0x4
D_main_sbss_fea4c = 0x800fea4c; // type:u8 size:0x4
D_main_sbss_fea50 = 0x800fea50; // type:u8 size:0x4
D_main_sbss_fea54 = 0x800fea54; // type:u8 size:0x4
D_main_sbss_fea58 = 0x800fea58; // type:u8 size:0x4
D_main_sbss_fea5c = 0x800fea5c; // type:u8 size:0x4
D_main_sbss_fea60 = 0x800fea60; // type:u8 size:0x4
D_main_sbss_fea64 = 0x800fea64; // type:u8 size:0x4
D_main_sbss_fea68 = 0x800fea68; // type:u8 size:0x4
D_main_sbss_fea6c = 0x800fea6c; // type:u8 size:0x4
D_pad_sbss_fea70 = 0x800fea70; // type:u8 size:0x4
D_pad_sbss_fea74 = 0x800fea74; // type:u8 size:0x4
D_pad_sbss_fea78 = 0x800fea78; // type:u8 size:0x4
gpMovieContext = 0x800fea7c; // type:u32 size:0x4
D_cdfile_sbss_fea80 = 0x800fea80; // type:u32 size:0x4
D_cdfile_sbss_fea84 = 0x800fea84; // type:u32 size:0x4
gpMovieDecTbl = 0x800fea88; // type:u32 size:0x4
D_gfxa_sbss_fea90 = 0x800fea90; // type:u8 size:0x2
D_gfxa_sbss_fea92 = 0x800fea92; // type:u8 size:0x2
D_gfxa_sbss_fea94 = 0x800fea94; // type:u8 size:0x4
D_gfxc_sbss_fea98 = 0x800fea98; // type:u8 size:0x5
D_gfxc_sbss_fea9d = 0x800fea9d; // type:u8 size:0x1
D_gfxc_sbss_fea9e = 0x800fea9e; // type:u8 size:0x1
D_gfxc_sbss_fea9f = 0x800fea9f; // type:u8 size:0x1
D_gfxb_sbss_feaa0 = 0x800feaa0; // type:u8 size:0x4
D_gfxb_sbss_feaa4 = 0x800feaa4; // type:u8 size:0x4
D_c6d_sbss_feaa8 = 0x800feaa8; // type:u8 size:0x2
D_c6d_sbss_feaaa = 0x800feaaa; // type:u8 size:0x1
D_c6d_sbss_feaab = 0x800feaab; // type:u8 size:0x1
D_c6d_sbss_feaac = 0x800feaac; // type:u8 size:0x4
D_c6d_sbss_feab0 = 0x800feab0; // type:u8 size:0x4
D_c6d_sbss_feab4 = 0x800feab4; // type:u8 size:0x3
D_c6d_sbss_feab7 = 0x800feab7; // type:u8 size:0x5
D_c6d_sbss_feabc = 0x800feabc; // type:u8 size:0x6
D_c6d_sbss_feac2 = 0x800feac2; // type:u8 size:0x2
D_c6d_sbss_feac4 = 0x800feac4; // type:u8 size:0x4
D_c6d_sbss_feac8 = 0x800feac8; // type:u8 size:0x4
D_c6d_sbss_feacc = 0x800feacc; // type:u8 size:0x4
D_c6d_sbss_fead0 = 0x800fead0; // type:u8 size:0x1
D_c6d_sbss_fead1 = 0x800fead1; // type:u8 size:0x3
D_heap_sbss_fead4 = 0x800fead4; // type:u8 size:0x4
D_heap_sbss_fead8 = 0x800fead8; // type:u8 size:0x4
D_heap_sbss_feadc = 0x800feadc; // type:u8 size:0x4
D_heap_sbss_feae0 = 0x800feae0; // type:u8 size:0x4
D_mcsave_sbss_feae4 = 0x800feae4; // type:u8 size:0x4
D_mcsave_sbss_feae8 = 0x800feae8; // type:u8 size:0x4
D_c8_sbss_feaec = 0x800feaec; // type:u8 size:0x4
D_c9_sbss_feaf0 = 0x800feaf0; // type:u8 size:0x4
D_c9_sbss_feaf4 = 0x800feaf4; // type:u8 size:0x4
D_caa_sbss_feaf8 = 0x800feaf8; // type:u8 size:0x4
D_caa_sbss_feafc = 0x800feafc; // type:u8 size:0x4
D_caa_sbss_feb00 = 0x800feb00; // type:u8 size:0x6
D_caa_sbss_feb06 = 0x800feb06; // type:u8 size:0x2
D_caa_sbss_feb08 = 0x800feb08; // type:u8 size:0x8
D_caa_sbss_feb10 = 0x800feb10; // type:u8 size:0x10
D_cbb_sbss_feb20 = 0x800feb20; // type:u8 size:0x4
D_ccb_sbss_feb24 = 0x800feb24; // type:u8 size:0x4
gApplState = 0x800feb28; // type:u8 size:0x920
D_main_bss_ff448 = 0x800ff448; // type:u8 size:0x6
D_main_bss_ff44e = 0x800ff44e; // type:u8 size:0x6a
D_main_bss_ff4b8 = 0x800ff4b8; // type:u8 size:0x44
D_main_bss_ff4fc = 0x800ff4fc; // type:u8 size:0x8
D_main_bss_ff504 = 0x800ff504; // type:u8 size:0x9
D_main_bss_ff50d = 0x800ff50d; // type:u8 size:0x1
D_main_bss_ff50e = 0x800ff50e; // type:u8 size:0xe
D_main_bss_ff51c = 0x800ff51c; // type:u8 size:0x4
D_main_bss_ff520 = 0x800ff520; // type:u8 size:0x8
D_main_bss_ff528 = 0x800ff528; // type:u8 size:0x3
D_main_bss_ff52b = 0x800ff52b; // type:u8 size:0x9
D_main_bss_ff534 = 0x800ff534; // type:u8 size:0x1
D_main_bss_ff535 = 0x800ff535; // type:u8 size:0x3
D_main_bss_ff538 = 0x800ff538; // type:u8 size:0x2
D_main_bss_ff53a = 0x800ff53a; // type:u8 size:0x7
D_main_bss_ff541 = 0x800ff541; // type:u8 size:0x1
D_main_bss_ff542 = 0x800ff542; // type:u8 size:0x4
D_main_bss_ff546 = 0x800ff546; // type:u8 size:0x6
D_main_bss_ff54c = 0x800ff54c; // type:u8 size:0x10c
D_main_bss_ff658 = 0x800ff658; // type:u8 size:0x10
D_main_bss_ff668 = 0x800ff668; // type:u8 size:0x80
D_main_bss_ff6e8 = 0x800ff6e8; // type:u8 size:0x20
D_main_bss_ff708 = 0x800ff708; // type:u8 size:0xc
D_main_bss_ff714 = 0x800ff714; // type:u8 size:0x6
D_main_bss_ff71a = 0x800ff71a; // type:u8 size:0x8
D_main_bss_ff722 = 0x800ff722; // type:u8 size:0x80
D_main_bss_ff7a2 = 0x800ff7a2; // type:u8 size:0x97
D_main_bss_ff839 = 0x800ff839; // type:u8 size:0x1
D_main_bss_ff83a = 0x800ff83a; // type:u8 size:0x2
D_main_bss_ff83c = 0x800ff83c; // type:u8 size:0x4
D_main_bss_ff840 = 0x800ff840; // type:u8 size:0x4
D_main_bss_ff844 = 0x800ff844; // type:u8 size:0x4
D_main_bss_ff848 = 0x800ff848; // type:u8 size:0x328
D_main_bss_ffb70 = 0x800ffb70; // type:u8 size:0x10
D_pad_bss_ffb80 = 0x800ffb80; // type:u8 size:0xb0
D_pad_bss_ffc30 = 0x800ffc30; // type:u8 size:0xd8
gCdFilesCtx = 0x800ffd08; // type:u8 size:0xd8
gCdLoadCtx = 0x800ffde0; // type:u8 size:0x130
gAudioContext = 0x800fff10; // type:u8 size:0xf0
D_audio_bss_100000 = 0x80100000; // type:u8 size:0x1c
D_audio_bss_10001c = 0x8010001c; // type:u8 size:0x34
D_audio_bss_100050 = 0x80100050; // type:u8 size:0x18
D_audio_bss_100068 = 0x80100068; // type:u8 size:0xc
D_audio_bss_100074 = 0x80100074; // type:u8 size:0x24
sSeqAttrTable = 0x80100098; // type:u8 size:0x420
D_audio_bss_1004b8 = 0x801004b8; // type:u8 size:0x30
D_audio_bss_1004e8 = 0x801004e8; // type:u8 size:0x30
D_audio_bss_100518 = 0x80100518; // type:u8 size:0x38
D_audio_bss_100550 = 0x80100550; // type:u8 size:0x38
D_audio_bss_100588 = 0x80100588; // type:u8 size:0xc
D_audio_bss_100594 = 0x80100594; // type:u8 size:0xd
D_audio_bss_1005a1 = 0x801005a1; // type:u8 size:0x9
D_audio_bss_1005aa = 0x801005aa; // type:u8 size:0x78
D_audio_bss_100622 = 0x80100622; // type:u8 size:0x2
D_audio_bss_100624 = 0x80100624; // type:u8 size:0x2
D_audio_bss_100626 = 0x80100626; // type:u8 size:0x2
D_audio_bss_100628 = 0x80100628; // type:u8 size:0x520
D_gfxa_bss_1012b2 = 0x801012b2; // type:u8 size:0x4
D_gfxa_bss_1012b6 = 0x801012b6; // type:u8 size:0x2
D_gfxa_bss_1012b8 = 0x801012b8; // type:u8 size:0x2
D_gfxa_bss_1012ba = 0x801012ba; // type:u8 size:0x6
D_gfxb_bss_1012c0 = 0x801012c0; // type:u8 size:0x3c
D_gfxb_bss_1012fc = 0x801012fc; // type:u8 size:0xb08
D_gfxb_bss_101e04 = 0x80101e04; // type:u8 size:0x20
D_gfxb_bss_101e24 = 0x80101e24; // type:u8 size:0x7
D_gfxb_bss_101e2b = 0x80101e2b; // type:u8 size:0x65
D_gfxb_bss_101e90 = 0x80101e90; // type:u8 size:0x2d0
D_gfxb_bss_102160 = 0x80102160; // type:u8 size:0x48
D_gfxb_bss_1021a8 = 0x801021a8; // type:u8 size:0x37
D_gfxb_bss_1021df = 0x801021df; // type:u8 size:0x38d
D_gfxb_bss_10256c = 0x8010256c; // type:u8 size:0x20
D_gfxb_bss_10258c = 0x8010258c; // type:u8 size:0x7
D_gfxb_bss_102593 = 0x80102593; // type:u8 size:0x38d
D_gfxb_bss_102920 = 0x80102920; // type:u8 size:0x58
D_gfxb_bss_102978 = 0x80102978; // type:u8 size:0x2
D_gfxb_bss_10297a = 0x8010297a; // type:u8 size:0x123a
D_gfxb_bss_103bb4 = 0x80103bb4; // type:u8 size:0x1
D_gfxb_bss_103bb5 = 0x80103bb5; // type:u8 size:0xf
D_gfxb_bss_103bc4 = 0x80103bc4; // type:u8 size:0xc
D_gfxb_bss_103bd0 = 0x80103bd0; // type:u8 size:0x10
D_gfxb_bss_103be0 = 0x80103be0; // type:u8 size:0x3408
D_gfxb_bss_106fe8 = 0x80106fe8; // type:u8 size:0x300
D_gfxb_bss_1072e8 = 0x801072e8; // type:u8 size:0xac
D_gfxb_bss_107394 = 0x80107394; // type:u8 size:0x4
D_gfxb_bss_107398 = 0x80107398; // type:u8 size:0x64
D_gfxb_bss_1073fc = 0x801073fc; // type:u8 size:0x320
D_gfxb_bss_10771c = 0x8010771c; // type:u8 size:0xbc
D_gfxb_bss_1077d8 = 0x801077d8; // type:u8 size:0x284
D_gfxb_bss_107a5c = 0x80107a5c; // type:u8 size:0xa2
D_gfxb_bss_107afe = 0x80107afe; // type:u8 size:0x6
D_gfxb_bss_107b04 = 0x80107b04; // type:u8 size:0xf0
D_gfxb_bss_107bf4 = 0x80107bf4; // type:u8 size:0x4c
D_gfxb_bss_107c40 = 0x80107c40; // type:u8 size:0xf0
D_gfxb_bss_107d30 = 0x80107d30; // type:u8 size:0x7bc
D_gfxb_bss_1084ec = 0x801084ec; // type:u8 size:0x1e0
D_gfxb_bss_1086cc = 0x801086cc; // type:u8 size:0xf0
D_gfxb_bss_1087bc = 0x801087bc; // type:u8 size:0x24
D_gfxb_bss_1087e0 = 0x801087e0; // type:u8 size:0x2e0
D_c6d_bss_108ac0 = 0x80108ac0; // type:u8 size:0x1
D_c6d_bss_108ac1 = 0x80108ac1; // type:u8 size:0x3
D_c6d_bss_108ac4 = 0x80108ac4; // type:u8 size:0x14
D_c6d_bss_108ad8 = 0x80108ad8; // type:u8 size:0x10
D_c6d_bss_108ae8 = 0x80108ae8; // type:u8 size:0x10
D_c6d_bss_108af8 = 0x80108af8; // type:u8 size:0x10
D_c6d_bss_108b08 = 0x80108b08; // type:u8 size:0x20
D_c6d_bss_108b28 = 0x80108b28; // type:u8 size:0x140
D_c6d_bss_108c68 = 0x80108c68; // type:u8 size:0x58
D_c6d_bss_108cc0 = 0x80108cc0; // type:u8 size:0x1500
D_c6d_bss_10a1c0 = 0x8010a1c0; // type:u8 size:0x10
D_c6d_bss_10a1d0 = 0x8010a1d0; // type:u8 size:0x30
D_c6d_bss_10a200 = 0x8010a200; // type:u8 size:0x18
D_c6d_bss_10a218 = 0x8010a218; // type:u8 size:0x8
D_c6d_bss_10a220 = 0x8010a220; // type:u8 size:0x40
D_heap_bss_10a260 = 0x8010a260; // type:u8 size:0x208
D_heap_bss_10a468 = 0x8010a468; // type:u8 size:0xc8
D_heap_bss_10a530 = 0x8010a530; // type:u8 size:0x70
D_mcsave_bss_10a5a0 = 0x8010a5a0; // type:u8 size:0x4
D_mcsave_bss_10a5a4 = 0x8010a5a4; // type:u8 size:0x4
D_mcsave_bss_10a5a8 = 0x8010a5a8; // type:u8 size:0x5
D_mcsave_bss_10a5ad = 0x8010a5ad; // type:u8 size:0x22b
D_mcsave_bss_10a7d8 = 0x8010a7d8; // type:u8 size:0xe4
D_mcsave_bss_10a8bc = 0x8010a8bc; // type:u8 size:0x39
D_mcsave_bss_10a8f5 = 0x8010a8f5; // type:u8 size:0xeb
D_ccb_bss_10a9e0 = 0x8010a9e0; // type:u8 size:0x40
D_ccc_bss_10aa20 = 0x8010aa20; // type:u8 size:0x20
D_ccc_bss_10aa40 = 0x8010aa40; // type:u8 size:0x20
D_ccc_bss_10aa60 = 0x8010aa60; // type:u8 size:0x20
D_ccc_bss_10aa80 = 0x8010aa80; // type:u8 size:0x20
D_ccc_bss_10aaa0 = 0x8010aaa0; // type:u8 size:0x18
D_libpad_dir_10aab8 = 0x8010aab8; // type:u8 size:0x1e0
D_libpad_dir_10ac98 = 0x8010ac98; // type:u8 size:0x48
D_libpad_dir_10ace0 = 0x8010ace0; // type:u8 size:0x48
D_libpad_res_10ad28 = 0x8010ad28; // type:u8 size:0x4
D_libpad_res_10ad2c = 0x8010ad2c; // type:u8 size:0x4
D_libpad_res_10ad30 = 0x8010ad30; // type:u8 size:0x4
D_libpad_res_10ad34 = 0x8010ad34; // type:u8 size:0x4
D_libpad_res_10ad38 = 0x8010ad38; // type:u8 size:0x4
D_libpad_res_10ad3c = 0x8010ad3c; // type:u8 size:0x4
D_libcard_patch_10ad40 = 0x8010ad40; // type:u8 size:0x10
D_libcard_end_10ad50 = 0x8010ad50; // type:u8 size:0x10
D_libmcrd_10ad60 = 0x8010ad60; // type:u8 size:0x4
D_libmcrd_10ad64 = 0x8010ad64; // type:u8 size:0x4
D_libmcrd_10ad68 = 0x8010ad68; // type:u8 size:0x4
D_libmcrd_10ad6c = 0x8010ad6c; // type:u8 size:0x4
D_libmcrd_10ad70 = 0x8010ad70; // type:u8 size:0x4
D_libmcrd_10ad74 = 0x8010ad74; // type:u8 size:0x4
D_libmcrd_10ad78 = 0x8010ad78; // type:u8 size:0x8
D_libmcrd_10ad80 = 0x8010ad80; // type:u8 size:0x4
D_libmcrd_10ad84 = 0x8010ad84; // type:u8 size:0xc
D_libmcrd_10ad90 = 0x8010ad90; // type:u8 size:0x4
D_libmcrd_10ad94 = 0x8010ad94; // type:u8 size:0xc
D_libmcrd_10ada0 = 0x8010ada0; // type:u8 size:0x4
D_libmcrd_10ada4 = 0x8010ada4; // type:u8 size:0x30
D_libmcrd_10add4 = 0x8010add4; // type:u8 size:0x14
D_libmcrd_10ade8 = 0x8010ade8; // type:u8 size:0x8
D_libmcrd_userfunc_10adf0 = 0x8010adf0; // type:u8 size:0xc
D_libmcrd_userfunc_10adfc = 0x8010adfc; // type:u8 size:0x34
D_libmcrd_userfunc_10ae30 = 0x8010ae30; // type:u8 size:0x10
D_libmcrd_bios_10ae40 = 0x8010ae40; // type:u8 size:0x4
D_libmcrd_bios_10ae44 = 0x8010ae44; // type:u8 size:0x4
D_libmcrd_bios_10ae48 = 0x8010ae48; // type:u8 size:0x4
D_libmcrd_bios_10ae4c = 0x8010ae4c; // type:u8 size:0x4
D_libmcrd_bios_10ae50 = 0x8010ae50; // type:u8 size:0x4
D_libmcrd_bios_10ae54 = 0x8010ae54; // type:u8 size:0x4
D_libmcrd_bios_10ae58 = 0x8010ae58; // type:u8 size:0x4
D_libmcrd_bios_10ae5c = 0x8010ae5c; // type:u8 size:0x4
D_libmcrd_bios_10ae60 = 0x8010ae60; // type:u8 size:0x4
D_libmcrd_bios_10ae64 = 0x8010ae64; // type:u8 size:0x4
D_libmcrd_bios_10ae68 = 0x8010ae68; // type:u8 size:0x4
D_libmcrd_bios_10ae6c = 0x8010ae6c; // type:u8 size:0x4
D_libmcrd_bios_10ae70 = 0x8010ae70; // type:u8 size:0x4
D_libmcrd_bios_10ae74 = 0x8010ae74; // type:u8 size:0x4
D_libmcrd_bios_10ae78 = 0x8010ae78; // type:u8 size:0x4
D_libmcrd_bios_10ae7c = 0x8010ae7c; // type:u8 size:0x4
D_libmcrd_low_10ae80 = 0x8010ae80; // type:u8 size:0x4
D_libmcrd_low_10ae84 = 0x8010ae84; // type:u8 size:0x4
D_libmcrd_low_10ae88 = 0x8010ae88; // type:u8 size:0x2
D_libmcrd_low_10ae8a = 0x8010ae8a; // type:u8 size:0x12e
D_libmcrd_low_10afb8 = 0x8010afb8; // type:u8 size:0x88
D_libmcrd_low_10b040 = 0x8010b040; // type:u8 size:0x20
D_libmcrd_low_10b060 = 0x8010b060; // type:u8 size:0x4f
D_libmcrd_low_10b0af = 0x8010b0af; // type:u8 size:0x1
D_libmcrd_low_10b0b0 = 0x8010b0b0; // type:u8 size:0x10
D_libmcrd_low_10b0c0 = 0x8010b0c0; // type:u8 size:0x80
D_libspu_10b140 = 0x8010b140; // type:u8 size:0x18
D_libsnd_vmf_10b158 = 0x8010b158; // type:u8 size:0x4
D_libsnd_vmf_10b15c = 0x8010b15c; // type:u8 size:0x4
D_libsnd_vmf_10b160 = 0x8010b160; // type:u8 size:0x4
D_libsnd_vmf_10b164 = 0x8010b164; // type:u8 size:0x4
D_libsnd_vmf_10b168 = 0x8010b168; // type:u8 size:0x8
D_libsnd_vmf_10b170 = 0x8010b170; // type:u8 size:0x4
D_libsnd_vmf_10b174 = 0x8010b174; // type:u8 size:0x4
D_libsnd_vmf_10b178 = 0x8010b178; // type:u8 size:0x4
D_libsnd_vmf_10b17c = 0x8010b17c; // type:u8 size:0x4
D_libsnd_vmf_10b180 = 0x8010b180; // type:u8 size:0x4
D_libsnd_vmf_10b184 = 0x8010b184; // type:u8 size:0x4
D_libsnd_vmf_10b188 = 0x8010b188; // type:u8 size:0x4
D_libsnd_vmf_10b18c = 0x8010b18c; // type:u8 size:0x4
D_libsnd_vmf_10b190 = 0x8010b190; // type:u8 size:0x4
D_libsnd_vmf_10b194 = 0x8010b194; // type:u8 size:0x4
D_libsnd_vmf_10b198 = 0x8010b198; // type:u8 size:0x4
D_libsnd_vmf_10b19c = 0x8010b19c; // type:u8 size:0x50
D_libsnd_vmf_10b1ec = 0x8010b1ec; // type:u8 size:0x4
D_libsnd_vmf_10b1f0 = 0x8010b1f0; // type:u8 size:0x4
D_libsnd_vmf_10b1f4 = 0x8010b1f4; // type:u8 size:0x4
D_libsnd_vmf_10b1f8 = 0x8010b1f8; // type:u8 size:0x80
D_libsnd_vmf_10b278 = 0x8010b278; // type:u8 size:0x800
D_libsnd_vmf_10ba78 = 0x8010ba78; // type:u8 size:0x2
D_libsnd_vmf_10ba7a = 0x8010ba7a; // type:u8 size:0x6
D_libsnd_vminit_10ba80 = 0x8010ba80; // type:u8 size:0x2
D_libsnd_vminit_10ba82 = 0x8010ba82; // type:u8 size:0x2
D_libsnd_vminit_10ba84 = 0x8010ba84; // type:u8 size:0x2
D_libsnd_vminit_10ba86 = 0x8010ba86; // type:u8 size:0x2
D_libsnd_vminit_10ba88 = 0x8010ba88; // type:u8 size:0x2
D_libsnd_vminit_10ba8a = 0x8010ba8a; // type:u8 size:0x6
D_libsnd_vminit_10ba90 = 0x8010ba90; // type:u8 size:0x2
D_libsnd_vminit_10ba92 = 0x8010ba92; // type:u8 size:0x2
D_libsnd_vminit_10ba94 = 0x8010ba94; // type:u8 size:0x2
D_libsnd_vminit_10ba96 = 0x8010ba96; // type:u8 size:0x2
D_libsnd_vminit_10ba98 = 0x8010ba98; // type:u8 size:0x2
D_libsnd_vminit_10ba9a = 0x8010ba9a; // type:u8 size:0x2
D_libsnd_vminit_10ba9c = 0x8010ba9c; // type:u8 size:0x2
D_libsnd_vminit_10ba9e = 0x8010ba9e; // type:u8 size:0x2
D_libsnd_vminit_10baa0 = 0x8010baa0; // type:u8 size:0x2
D_libsnd_vminit_10baa2 = 0x8010baa2; // type:u8 size:0x2
D_libsnd_vminit_10baa4 = 0x8010baa4; // type:u8 size:0x2
D_libsnd_vminit_10baa6 = 0x8010baa6; // type:u8 size:0x2
D_libsnd_vminit_10baa8 = 0x8010baa8; // type:u8 size:0x2
D_libsnd_vminit_10baaa = 0x8010baaa; // type:u8 size:0x3
D_libsnd_vminit_10baad = 0x8010baad; // type:u8 size:0x1
D_libsnd_vminit_10baae = 0x8010baae; // type:u8 size:0x2
D_libsnd_vminit_10bab0 = 0x8010bab0; // type:u8 size:0x2
D_libsnd_vminit_10bab2 = 0x8010bab2; // type:u8 size:0x2
D_libsnd_vminit_10bab4 = 0x8010bab4; // type:u8 size:0x2
D_libsnd_vminit_10bab6 = 0x8010bab6; // type:u8 size:0x4
D_libsnd_vminit_10baba = 0x8010baba; // type:u8 size:0x2
D_libsnd_vminit_10babc = 0x8010babc; // type:u8 size:0x2
D_libsnd_vminit_10babe = 0x8010babe; // type:u8 size:0x2
D_libsnd_vminit_10bac0 = 0x8010bac0; // type:u8 size:0x2
D_libsnd_vminit_10bac2 = 0x8010bac2; // type:u8 size:0x4
D_libsnd_vminit_10bac6 = 0x8010bac6; // type:u8 size:0x50a
D_libsnd_vminit_10bfd0 = 0x8010bfd0; // type:u8 size:0x18
D_libsnd_vminit_10bfe8 = 0x8010bfe8; // type:u8 size:0x8
D_libsnd_vminit_10bff0 = 0x8010bff0; // type:u8 size:0x2
D_libsnd_vminit_10bff2 = 0x8010bff2; // type:u8 size:0x2
D_libsnd_vminit_10bff4 = 0x8010bff4; // type:u8 size:0x2
D_libsnd_vminit_10bff6 = 0x8010bff6; // type:u8 size:0x2
D_libsnd_vminit_10bff8 = 0x8010bff8; // type:u8 size:0x178
D_libsnd_vminit_10c170 = 0x8010c170; // type:u8 size:0x4
D_libsnd_vminit_10c174 = 0x8010c174; // type:u8 size:0x4
D_libsnd_vminit_10c178 = 0x8010c178; // type:u8 size:0x40
D_libsnd_vminit_10c1b8 = 0x8010c1b8; // type:u8 size:0x2
D_libsnd_vminit_10c1ba = 0x8010c1ba; // type:u8 size:0x6
D_libsnd_vminit_10c1c0 = 0x8010c1c0; // type:u8 size:0x18
D_libsnd_vminit_10c1d8 = 0x8010c1d8; // type:u8 size:0x40
D_libsnd_vminit_10c218 = 0x8010c218; // type:u8 size:0x40
D_libsnd_vminit_10c258 = 0x8010c258; // type:u8 size:0x8
D_libsnd_vminit_10c260 = 0x8010c260; // type:u8 size:0x40
D_libsnd_vminit_10c2a0 = 0x8010c2a0; // type:u8 size:0x2
D_libsnd_vminit_10c2a2 = 0x8010c2a2; // type:u8 size:0x2
D_libsnd_vminit_10c2a4 = 0x8010c2a4; // type:u8 size:0x8
D_libsnd_vminit_10c2ac = 0x8010c2ac; // type:u8 size:0x4
D_libsnd_vminit_10c2b0 = 0x8010c2b0; // type:u8 size:0x4
D_libsnd_vminit_10c2b4 = 0x8010c2b4; // type:u8 size:0x4
D_libsnd_vminit_10c2b8 = 0x8010c2b8; // type:u8 size:0x8
D_libsnd_vminit_10c2c0 = 0x8010c2c0; // type:u8 size:0x1
D_libsnd_vminit_10c2c1 = 0x8010c2c1; // type:u8 size:0x4
D_libsnd_vminit_10c2c5 = 0x8010c2c5; // type:u8 size:0x2
D_libsnd_vminit_10c2c7 = 0x8010c2c7; // type:u8 size:0x4
D_libsnd_vminit_10c2cb = 0x8010c2cb; // type:u8 size:0x1
D_libsnd_vminit_10c2cc = 0x8010c2cc; // type:u8 size:0x3
D_libsnd_vminit_10c2cf = 0x8010c2cf; // type:u8 size:0x2
D_libsnd_vminit_10c2d1 = 0x8010c2d1; // type:u8 size:0x1
D_libsnd_vminit_10c2d2 = 0x8010c2d2; // type:u8 size:0x2
D_libsnd_vminit_10c2d4 = 0x8010c2d4; // type:u8 size:0x4
D_libsnd_vminit_10c2d8 = 0x8010c2d8; // type:u8 size:0x8
D_libsnd_vminit_10c2e0 = 0x8010c2e0; // type:u8 size:0x10
D_libsnd_vminit_10c2f0 = 0x8010c2f0; // type:u8 size:0x8
D_libsnd_vminit_10c2f8 = 0x8010c2f8; // type:u8 size:0x40
D_libsnd_vminit_10c338 = 0x8010c338; // type:u8 size:0x8
D_libsnd_vminit_10c340 = 0x8010c340; // type:u8 size:0x48
D_libsnd_vminit_10c388 = 0x8010c388; // type:u8 size:0x108
D_libcd_cdrom_10c490 = 0x8010c490; // type:u8 size:0x4
D_libcd_cdrom_10c494 = 0x8010c494; // type:u8 size:0x4
D_libcd_cdrom_10c498 = 0x8010c498; // type:u8 size:0x4
D_libcd_cdrom_10c49c = 0x8010c49c; // type:s32 size:0x4
D_libcd_cdrom_10c4a0 = 0x8010c4a0; // type:u8 size:0x4
D_libcd_cdrom_10c4a4 = 0x8010c4a4; // type:u8 size:0x4
D_libcd_cdrom_10c4a8 = 0x8010c4a8; // type:u8 size:0x4
D_libcd_cdrom_10c4ac = 0x8010c4ac; // type:u8 size:0x4
D_libcd_cdrom_10c4b0 = 0x8010c4b0; // type:u8 size:0x4
D_libcd_cdrom_10c4b4 = 0x8010c4b4; // type:u8 size:0x4
D_libcd_cdrom_10c4b8 = 0x8010c4b8; // type:u8 size:0x4
D_libcd_cdrom_10c4bc = 0x8010c4bc; // type:u8 size:0x4
D_libcd_cdrom_10c4c0 = 0x8010c4c0; // type:u8 size:0x4
D_libcd_cdrom_10c4c4 = 0x8010c4c4; // type:u8 size:0x4
D_libcd_cdrom_10c4c8 = 0x8010c4c8; // type:u8 size:0x4
D_libcd_cdrom_10c4cc = 0x8010c4cc; // type:u8 size:0x4
D_libcd_cdrom_10c4d0 = 0x8010c4d0; // type:u8 size:0x4
D_libcd_cdrom_10c4d4 = 0x8010c4d4; // type:u8 size:0x4
D_libcd_iso_10c4d8 = 0x8010c4d8; // type:u8 size:0x1
D_libcd_iso_10c4d9 = 0x8010c4d9; // type:u8 size:0x1
D_libcd_iso_10c4da = 0x8010c4da; // type:u8 size:0x2
D_libcd_iso_10c4dc = 0x8010c4dc; // type:u8 size:0x4
D_libcd_iso_10c4e0 = 0x8010c4e0; // type:u8 size:0x5d4
D_libcd_iso_10cab4 = 0x8010cab4; // type:u8 size:0x24
D_libcd_iso_10cad8 = 0x8010cad8; // type:u8 size:0x4
D_libcd_iso_10cadc = 0x8010cadc; // type:u8 size:0x4
D_libcd_iso_10cae0 = 0x8010cae0; // type:u8 size:0x4
D_libcd_iso_10cae4 = 0x8010cae4; // type:u8 size:0x15f4
D_libcd_iso_10e0d8 = 0x8010e0d8; // type:u8 size:0x800
D_libcd_10e8d8 = 0x8010e8d8; // type:u8 size:0x4
D_libcd_10e8dc = 0x8010e8dc; // type:u8 size:0xc
D_libcd_10e8e8 = 0x8010e8e8; // type:u8 size:0x4
D_libcd_10e8ec = 0x8010e8ec; // type:u8 size:0x4
D_libcd_10e8f0 = 0x8010e8f0; // type:u8 size:0x10
D_libcd_bios_10e900 = 0x8010e900; // type:u8 size:0x8
D_libcd_bios_10e908 = 0x8010e908; // type:u8 size:0x8
D_libcd_bios_10e910 = 0x8010e910; // type:u8 size:0x8
D_libcd_bios_10e918 = 0x8010e918; // type:u8 size:0x4
D_libcd_bios_10e91c = 0x8010e91c; // type:u8 size:0x4
D_libcd_bios_10e920 = 0x8010e920; // type:u8 size:0x10
D_libcd_bios_10e930 = 0x8010e930; // type:u8 size:0x8
D_libgpu_sys_10e938 = 0x8010e938; // type:u8 size:0x28
D_libgpu_sys_10e960 = 0x8010e960; // type:u8 size:0x28
D_libgpu_sys_10e988 = 0x8010e988; // type:u8 size:0x4
D_libgpu_sys_10e98c = 0x8010e98c; // type:u8 size:0x4
D_libgpu_sys_10e990 = 0x8010e990; // type:u8 size:0x4
D_libgpu_sys_10e994 = 0x8010e994; // type:u8 size:0x17f4
D_psapi_first_110188 = 0x80110188; // type:u8 size:0x8
D_psapi_first_110190 = 0x80110190; // type:u8 size:0x28
D_psapi_pad_1101b8 = 0x801101b8; // type:u8 size:0x4
D_psapi_pad_1101bc = 0x801101bc; // type:u8 size:0x8
D_psapi_pad_1101c4 = 0x801101c4; // type:u8 size:0x4
D_psapi_patch_1101c8 = 0x801101c8; // type:u8 size:0x8
_psapi_funcptr_padEnable = 0x801101d0; // type:u32 size:0x4
_psapi_funcptr_padDisable = 0x801101d4; // type:u32 size:0x4
D_psapi_chclrpad_1101d8 = 0x801101d8; // type:u8 size:0x10
D_globalBss_1101e8 = 0x801101e8; // type:u8 size:0x1218
gHeap = 0x80111400; // type:u8 size:0xd6200
gFileLoadBuffer = 0x801e8000; // type:u8 size:0x8000
D_globalBss_1f0000 = 0x801f0000; // type:u8 size:0x2
D_globalBss_1f0002 = 0x801f0002; // type:u8 size:0x1
D_globalBss_1f0003 = 0x801f0003; // type:u8 size:0x1
D_globalBss_1f0004 = 0x801f0004; // type:u8 size:0x3
D_globalBss_1f0007 = 0x801f0007; // type:u8 size:0x1
D_globalBss_1f0008 = 0x801f0008; // type:u8 size:0x3
D_globalBss_1f000b = 0x801f000b; // type:u8 size:0x1
D_globalBss_1f000c = 0x801f000c; // type:u8 size:0x3
D_globalBss_1f000f = 0x801f000f; // type:u8 size:0x1
D_globalbss_1f0010 = 0x801f0010; // type:u8 size:0x3
D_globalbss_1f0013 = 0x801f0013; // type:u8 size:0x1
D_globalbss_1f0014 = 0x801f0014; // type:u8 size:0x3
D_globalbss_1f0017 = 0x801f0017; // type:u8 size:0x1
D_globalbss_1f0018 = 0x801f0018; // type:u8 size:0x3
D_globalbss_1f001b = 0x801f001b; // type:u8 size:0x1
D_globalbss_1f001c = 0x801f001c; // type:u8 size:0x3
D_globalbss_1f001f = 0x801f001f; // type:u8 size:0x1e1
D_globalbss_1f0200 = 0x801f0200; // type:u8 size:0xe00
D_globalbss_1f1000 = 0x801f1000; // type:u8 size:0x1fe
D_globalbss_1f11fe = 0x801f11fe; // type:u8 size:0x2e02
D_globalbss_1f4000 = 0x801f4000; // type:u8 size:0x4
D_globalbss_1f4004 = 0x801f4004; // type:u8 size:0x3
D_globalbss_1f4007 = 0x801f4007; // type:u8 size:0x1
D_globalbss_1f4008 = 0x801f4008; // type:u8 size:0x3
D_globalbss_1f400b = 0x801f400b; // type:u8 size:0x1
D_globalbss_1f400c = 0x801f400c; // type:u8 size:0x3
D_globalbss_1f400f = 0x801f400f; // type:u8 size:0x1
D_globalbss_1f4010 = 0x801f4010; // type:u8 size:0x3
D_globalbss_1f4013 = 0x801f4013; // type:u8 size:0x1
D_globalbss_1f4014 = 0x801f4014; // type:u8 size:0x3
D_globalbss_1f4017 = 0x801f4017; // type:u8 size:0x1
D_globalbss_1f4018 = 0x801f4018; // type:u8 size:0x3
D_globalbss_1f401b = 0x801f401b; // type:u8 size:0x1
D_globalbss_1f401c = 0x801f401c; // type:u8 size:0x3
D_globalbss_1f401f = 0x801f401f; // type:u8 size:0xfe1
D_globalbss_1f5000 = 0x801f5000; // type:u8 size:0x1fe
D_globalbss_1f51fe = 0x801f51fe; // type:u8 size:0xe02
D_globalbss_1f6000 = 0x801f6000; // type:u8 size:0x2000
gCdLoadBufferA = 0x801f8000; // type:u8 size:0x2800
gCdLoadBufferB = 0x801fa800; // type:u8 size:0x2800
